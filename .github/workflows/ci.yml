name: CI/CD Pipeline

on:
  push:
    branches:
      - action_git  # Déclencher les actions sur les push dans la branche main
  pull_request:
    branches:
      - action_git

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      # Run tests
      - name: Run tests
        run: |
          cd backend
          pytest  # Assurez-vous d'avoir des tests dans votre projet

  docker-build:
    runs-on: ubuntu-latest
    needs: build  # Ce job ne s'exécute que si le job build réussit

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my-fastapi-app ./backend/

      # Optionally, push Docker image to a registry (e.g., Docker Hub or GitHub Packages)
      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKERHUB_USERNAME }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker tag my-fastapi-app my-dockerhub-username/my-fastapi-app:latest
          docker push my-dockerhub-username/my-fastapi-app:latest
